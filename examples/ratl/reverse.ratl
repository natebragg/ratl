(define snoc ((list 'a) 'a -> (list 'a)) (xs x)
  (if (null? xs)
    (cons x '())
    (cons (car xs) (snoc (cdr xs) x))))

(define reverseQuad ((list 'a) -> (list 'a)) (xs)
  (if (null? xs)
    '[]
    (snoc (reverseQuad (cdr xs)) (car xs))))

(define reverseLin ((list 'a) -> (list 'a)) (xs)
  (revapp xs '[]))
