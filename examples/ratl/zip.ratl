(define zip ((list 'a) (list 'b) -> (list (pair 'a 'b))) (xs ys)
  (if (null? xs)
    '[]
    (if (null? ys)
      '[]
      (cons (pair (car xs) (car ys)) (zip (cdr xs) (cdr ys))))))

(define main ((list int) (list sym) -> (list (pair int sym))) (xs ys)
  (zip xs ys))
