(define mono_inc ([Nat] -> Nat) (xs)
    (if xs
        (if (cdr xs)
            (if (< (car (cdr xs)) (car xs))
                0
                (mono_inc (cdr xs)))
            1)
        1))

(define mono_dec ([Nat] -> Nat) (xs)
    (if xs
        (if (cdr xs)
            (if (< (car xs) (car (cdr xs)))
                0
                (mono_dec (cdr xs)))
            1)
        1))

(define main ([Nat] -> Nat) (xs)
    (if (mono_inc xs)
        1
        (mono_dec xs)))
