(define and (bool bool -> bool) (b c) (if b c b))
(define or  (bool bool -> bool) (b c) (if b b c))
(define not (bool -> bool) (b) (if b #f #t))
(define <=  (int int -> bool) (x y) (not (> x y)))
(define >=  (int int -> bool) (x y) (not (< x y)))
(define max (int int -> int) (x y) (if (> x y) x y))
(define min (int int -> int) (x y) (if (< x y) x y))
(define mod (int int -> int) (m n) (- m (* n (/ m n))))
(define gcd (int int -> int) (m n) (if (= n 0) m (gcd n (mod m n))))
(define lcm (int int -> int) (m n) (* m (/ n (gcd m n))))
